	#!/bin/bash
	### Hardening Script for CentOS7 Servers.
	AUDITDIR="/tmp/$(hostname -s)_audit"
	TIME="$(date +%F_%T)"

	mkdir -p $AUDITDIR

	echo "Disabling Legacy Filesystems"
	cat > /etc/modprobe.d/CIS.conf << "EOF"
	install cramfs /bin/true
	install freevxfs /bin/true
	install jffs2 /bin/true
	install hfs /bin/true
	install hfsplus /bin/true
	install squahfs /bin/true
	install udf /bin/true
	install dccp /bin/true
	install sctp /bin/true
	install rds /bin/true
	install tipc /bin/true
	EOF

	echo "Removing GCC compiler..."
	yum -y remove gcc*

	echo "Removing legacy services..."
	yum -y remove rsh-server rsh ypserv tftp tftp-server talk talk-server telnet-server xinetd >> $AUDITDIR/service_remove_$TIME.log

	echo "Disabling LDAP..."
	yum -y remove openldap-servers >> $AUDITDIR/service_remove_$TIME.log
	yum -y remove openldap-clients >> $AUDITDIR/service_remove_$TIME.log

	echo "Disabling DNS..."
	yum -y remove bind >> $AUDITDIR/service_remove_$TIME.log

	echo "Disabling FTP Server..."
	yum -y remove vsftpd >> $AUDITDIR/service_remove_$TIME.log

	echo "Disabling Dovecot..."
	yum -y remove dovecot >> $AUDITDIR/service_remove_$TIME.log

	echo "Disabling Samba..."
	yum -y remove samba >> $AUDITDIR/service_remove_$TIME.log

	echo "Disabling HTTP Proxy Server..."
	yum -y remove squid >> $AUDITDIR/service_remove_$TIME.log
	
	echo "Disabling SNMP..."
	yum -y remove net-snmp >> $AUDITDIR/service_remove_$TIME.log

	echo "Setting Daemon umask..."
	cp /etc/init.d/functions $AUDITDIR/functions_$TIME.bak
	echo "umask 027" >> /etc/init.d/functions

	echo "Disabling Unnecessary Services..."
	servicelist=(dhcpd avahi-daemon cups nfslock rpcgssd rpcbind rpcidmapd rpcsvcgssd)
	for i in ${servicelist[@]}; do
	  [ $(systemctl disable $i 2> /dev/null) ] || echo "$i is Disabled"
	done

	echo "Upgrading password hashing algorithm to SHA512..."
	authconfig --passalgo=sha512 --update


	echo "Setting core dump security limits..."
	cat >> /etc/security/limits.conf << 'EOF'
	* hard core 0
	EOF


	echo "Generating additional logs..."
	echo 'auth,user.* /var/log/user' >> /etc/rsyslog.conf
	echo 'kern.* /var/log/kern.log' >> /etc/rsyslog.conf
	echo 'daemon.* /var/log/daemon.log' >> /etc/rsyslog.conf
	echo 'syslog.* /var/log/syslog' >> /etc/rsyslog.conf
	echo 'lpr,news,uucp,local0,local1,local2,local3,local4,local5,local6.* /var/log/unused.log' >> /etc/rsyslog.conf
	touch /var/log/user /var/log/kern.log /var/log/daemon.log /var/log/syslog /var/log/unused.log
	chmod og-rwx /var/log/user /var/log/kern.log /var/log/daemon.log /var/log/syslog /var/log/unused.log
	chown root:root /var/log/user /var/log/kern.log /var/log/daemon.log /var/log/syslog /var/log/unused.log

	echo "Enabling auditd service..."
	systemctl enable auditd

	echo "Configuring Audit Log Storage Size..."
	cp -a /etc/audit/auditd.conf /etc/audit/auditd.conf.bak
	sed -i 's/^space_left_action.*$/space_left_action = SYSLOG/' /etc/audit/auditd.conf
	sed -i 's/^action_mail_acct.*$/action_mail_acct = root/' /etc/audit/auditd.conf
	sed -i 's/^admin_space_left_action.*$/admin_space_left_action = SYSLOG/' /etc/audit/auditd.conf

	echo "Setting audit rules..."
	cat > /etc/audit/rules.d/audit.rules << "EOF"
	## This file is automatically generated from /etc/audit/rules.d
-D
-b 8192
-f 1
--backlog_wait_time 0
-w /bin/kmod -p x -k auoms -k kernelmodules
-w /var/log/audit -p wxa -k audittampering -k auoms
-w /etc/audit -p wxa -k audittampering -k auoms
-w /etc/passwd -p wxa -k auoms -k usergroup
-w /etc/group -p wxa -k auoms -k usergroup
-w /etc/pam.d -p wxa -k auoms -k pam
-a always,exit -F arch=b32 -S execve,execveat -F key=auoms
-a always,exit -F arch=b64 -S execve,execveat -F key=auoms
-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
-a always,exit -F arch=b32 -S clock_settime -k time-change
-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
-a always,exit -F arch=b64 -S clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/network -p wa -k system-locale
-w /etc/networks -p wa -k system-locale
-w /etc/selinux/ -p wa -k MAC-policy
-w /usr/share/selinux/ -p wa -k MAC-policy
-w /var/log/faillog -p wa -k logins
-w /var/log/lastlog -p wa -k logins
-w /var/log/tallylog -p wa -k logins
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k logins
-w /var/log/btmp -p wa -k logins
-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F path=/bin/mount -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/bin/umount -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/bin/su -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/bin/ping -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/bin/fusermount -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/sbin/pam_extrausers_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/mlocate -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/dotlockfile -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/at -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/newgidmap -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/wall -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/expiry -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/ssh-agent -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/traceroute6.iputils -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/pkexec -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/chfn -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/bsd-write -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/newuidmap -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/lib/x86_64-linux-gnu/utempter/utempter -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/lib/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/lib/dbus-1.0/dbus-daemon-launch-helper -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/lib/eject/dmcrypt-get-device -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/lib/snapd/snap-confine -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/lib/policykit-1/polkit-agent-helper-1 -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/bin/mount -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/bin/ping -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/bin/ping6 -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/bin/su -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/bin/umount -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/sbin/pam_extrausers_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/chfn -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/dotlockfile -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/expiry -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/mail-lock -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/mail-touchlock -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/mail-unlock -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/ssh-agent -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/bin/wall -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/lib/dbus-1.0/dbus-daemon-launch-helper -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/lib/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/lib/snapd/snap-confine -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9066/usr/sbin/pppd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/bin/mount -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/bin/ping -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/bin/su -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/bin/umount -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/sbin/pam_extrausers_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/bin/chfn -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/bin/expiry -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/bin/ssh-agent -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/bin/wall -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/lib/dbus-1.0/dbus-daemon-launch-helper -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core18/1754/usr/lib/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/bin/mount -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/bin/ping -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/bin/ping6 -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/bin/su -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/bin/umount -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/sbin/pam_extrausers_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/chfn -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/dotlockfile -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/expiry -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/mail-lock -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/mail-touchlock -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/mail-unlock -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/ssh-agent -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/bin/wall -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/lib/dbus-1.0/dbus-daemon-launch-helper -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/lib/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/lib/snapd/snap-confine -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F path=/snap/core/9289/usr/sbin/pppd -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged
-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k export
-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k export
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
-w /etc/sudoers -p wa -k scope
-w /etc/sudoers.d/ -p wa -k scope
-w /var/log/sudo.log -p wa -k actions
-w /sbin/insmod -p x -k modules
-w /sbin/rmmod -p x -k modules
-w /sbin/modprobe -p x -k modules
-a always,exit -F arch=b64 -S init_module -S delete_module -k modules
-a always,exit -F arch=b32 -S init_module -S delete_module -k modules
-e 2
	EOF

	echo "Configuring Cron and Anacron..."
	yum -y install cronie-anacron >> $AUDITDIR/service_install_$TIME.log
	systemctl enable crond
	chown root:root /etc/anacrontab
	chmod og-rwx /etc/anacrontab
	chown root:root /etc/crontab
	chmod og-rwx /etc/crontab
	chown root:root /etc/cron.hourly
	chmod og-rwx /etc/cron.hourly
	chown root:root /etc/cron.daily
	chmod og-rwx /etc/cron.daily
	chown root:root /etc/cron.weekly
	chmod og-rwx /etc/cron.weekly
	chown root:root /etc/cron.monthly
	chmod og-rwx /etc/cron.monthly
	chown root:root /etc/cron.d
	chmod og-rwx /etc/cron.d
	/bin/rm -f /etc/cron.deny

	echo "Creating Banner..."
	sed -i "s/\#Banner none/Banner \/etc\/issue\.net/" /etc/ssh/sshd_config
	cp -p /etc/issue.net $AUDITDIR/issue.net_$TIME.bak
	cat > /etc/issue.net << 'EOF'
	==========================================================================
	|                       *** NOTICE TO USERS ***                          |
	|                                                                        |
	| Warning contents:                                                      |
	| This is a system belonging to <OpCo Axiata Bhd>. All <OpCo> systems are| 
	| provided for the processing of <OpCo>'s information and <OpCo> customer| 
	| personal data. All content on this system is confidential in nature and|
	| is protected as required by the Personal Data Protection Act 2010,other|
	| Malaysian Laws and regulations as well as <OpCo>'s confidentiality pro-|
	| visions and terms of use.The activities to this system may be monitored|
	| recorded, or captured in order to comply with <OpCo> internal policies |
	| and the relevant Malaysian Laws and Regulations. Any unauthorised use  |
	| of the system or the information therein shall be subject to discipli- |
	| nary action and may lead to criminal prosecution. Unauthorized or imp- |
	| roper use of this system may result in administrative action, discipli-| 
	| nary action and/or civil charges/criminal penalties, with jail terms of|
	| up to 3 years and fines of up to RM 500,000 By continuing to use this  |
	| system you indicate your awareness of and consent to these terms and   | 
	| conditions of use.                                                     |
	==========================================================================
	EOF
	cp -p /etc/motd /etc/motd_$TIME.bak
	cat > /etc/motd << 'EOF'
	==========================================================================
	|                       *** NOTICE TO USERS ***                          |
	|                                                                        |
	| Warning contents:                                                      |
	| This is a system belonging to <OpCo Axiata Bhd>. All <OpCo> systems are| 
	| provided for the processing of <OpCo>'s information and <OpCo> customer| 
	| personal data. All content on this system is confidential in nature and|
	| is protected as required by the Personal Data Protection Act 2010,other|
	| Malaysian Laws and regulations as well as <OpCo>'s confidentiality pro-|
	| visions and terms of use.The activities to this system may be monitored|
	| recorded, or captured in order to comply with <OpCo> internal policies |
	| and the relevant Malaysian Laws and Regulations. Any unauthorised use  |
	| of the system or the information therein shall be subject to discipli- |
	| nary action and may lead to criminal prosecution. Unauthorized or imp- |
	| roper use of this system may result in administrative action, discipli-| 
	| nary action and/or civil charges/criminal penalties, with jail terms of|
	| up to 3 years and fines of up to RM 500,000 By continuing to use this  |
	| system you indicate your awareness of and consent to these terms and   | 
	| conditions of use.                                                     |
	==========================================================================
	EOF

	echo "Configuring SSH..."
	cp /etc/ssh/sshd_config $AUDITDIR/sshd_config_$TIME.bak
	sed -i 's/#LogLevel INFO/LogLevel VERBOSE/g' /etc/ssh/sshd_config
	sed -i 's/#MaxAuthTries 6/MaxAuthTries 4/g' /etc/ssh/sshd_config
	sed -i 's/#IgnoreRhosts yes/IgnoreRhosts yes/g' /etc/ssh/sshd_config
	sed -i 's/#HostbasedAuthentication no/HostbasedAuthentication no/g' /etc/ssh/sshd_config
	sed -i 's/#PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config
	sed -i 's/#PermitEmptyPasswords no/PermitEmptyPasswords no/g' /etc/ssh/sshd_config
	sed -i 's/#PermitUserEnvironment no/PermitUserEnvironment no/g' /etc/ssh/sshd_config
	sed -i 's/#ClientAliveInterval 0/ClientAliveInterval 300/g' /etc/ssh/sshd_config
	sed -i 's/#ClientAliveCountMax 3/ClientAliveCountMax 0/g' /etc/ssh/sshd_config
	echo "Ciphers aes128-ctr,aes192-ctr,aes256-ctr"  >> /etc/ssh/sshd_config
	chown root:root /etc/ssh/sshd_config
	chmod 600 /etc/ssh/sshd_config

	systemctl restart sshd >> $AUDITDIR/service_restart_$TIME.log

	echo "Setting default umask for users..."
	line_num=$(grep -n "^[[:space:]]*umask" /etc/bashrc | head -1 | cut -d: -f1)
	sed -i ${line_num}s/002/027/ /etc/bashrc
	line_num=$(grep -n "^[[:space:]]*umask" /etc/profile | head -1 | cut -d: -f1)
	sed -i ${line_num}s/002/027/ /etc/profile

	echo "Locking inactive user accounts..."
	useradd -D -f 30

	echo "Verifying System File Permissions..."
	chmod 644 /etc/passwd
	chmod 000 /etc/shadow
	chmod 000 /etc/gshadow
	chmod 644 /etc/group
	chown root:root /etc/passwd
	chown root:root /etc/shadow
	chown root:root /etc/gshadow
	chown root:root /etc/group

	echo "Setting Sticky Bit on All World-Writable Directories..."
	df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null | xargs chmod a+t >> $AUDITDIR/sticky_on_world_$TIME.log

	echo "Searching for world writable files..."
	df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002 >> $AUDITDIR/world_writable_files_$TIME.log

	echo "Searching for Un-owned files and directories..."
	df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser -ls >> $AUDITDIR/unowned_files_$TIME.log

	#34: Find Un-grouped Files and Directories
	echo "Searching for Un-grouped files and directories..."
	df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nogroup -ls >> $AUDITDIR/ungrouped_files_$TIME.log

	echo "Searching for SUID System Executables..."
	df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -4000 -print >> $AUDITDIR/suid_exec_$TIME.log

	echo "Searching for SGID System Executables..."
	df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -2000 -print >> $AUDITDIR/sgid_exec_$TIME.log

	echo "Searching for empty password fields..."
	/bin/cat /etc/shadow | /bin/awk -F: '($2 == "" ) { print $1 " does not have a password "}' >> $AUDITDIR/empty_passwd_$TIME.log

	echo "Reviewing User and Group Settings..."
	echo "Reviewing User and Group Settings..." >> $AUDITDIR/reviewusrgrp_$TIME.log
	/bin/grep '^+:' /etc/passwd >> $AUDITDIR/reviewusrgrp_$TIME.log
	/bin/grep '^+:' /etc/shadow >> $AUDITDIR/reviewusrgrp_$TIME.log
	/bin/grep '^+:' /etc/group >> $AUDITDIR/reviewusrgrp_$TIME.log
	/bin/cat /etc/passwd | /bin/awk -F: '($3 == 0) { print $1 }' >> $AUDITDIR/reviewusrgrp_$TIME.log

	echo "Checking root PATH integrity..."

	if [ "`echo $PATH | /bin/grep :: `" != "" ]; then
		echo "Empty Directory in PATH (::)" >> $AUDITDIR/root_path_$TIME.log
	fi

	if [ "`echo $PATH | /bin/grep :$`"  != "" ]; then
		echo "Trailing : in PATH" >> $AUDITDIR/root_path_$TIME.log
	fi

	p=`echo $PATH | /bin/sed -e 's/::/:/' -e 's/:$//' -e 's/:/ /g'`
	set -- $p
	while [ "$1" != "" ]; do
		if [ "$1" = "." ]; then
			echo "PATH contains ." >> $AUDITDIR/root_path_$TIME.log
			shift
			continue
		fi
		if [ -d $1 ]; then
			dirperm=`/bin/ls -ldH $1 | /bin/cut -f1 -d" "`
			if [ `echo $dirperm | /bin/cut -c6 ` != "-" ]; then
				echo "Group Write permission set on directory $1" >> $AUDITDIR/root_path_$TIME.log
			fi
			if [ `echo $dirperm | /bin/cut -c9 ` != "-" ]; then
				echo "Other Write permission set on directory $1" >> $AUDITDIR/root_path_$TIME.log
			fi
				dirown=`ls -ldH $1 | awk '{print $3}'`
			   if [ "$dirown" != "root" ] ; then
				 echo "$1 is not owned by root" >> $AUDITDIR/root_path_$TIME.log
				  fi
		else
				echo "$1 is not a directory" >> $AUDITDIR/root_path_$TIME.log
		  fi
		shift
	done

	echo "Checking Permissions on User Home Directories..."

	for dir in `/bin/cat /etc/passwd  | /bin/egrep -v '(root|halt|sync|shutdown)' |\
		/bin/awk -F: '($8 == "PS" && $7 != "/sbin/nologin") { print $6 }'`; do
			dirperm=`/bin/ls -ld $dir | /bin/cut -f1 -d" "`
			if [ `echo $dirperm | /bin/cut -c6 ` != "-" ]; then
				echo "Group Write permission set on directory $dir" >> $AUDITDIR/home_permission_$TIME.log
			fi
			if [ `echo $dirperm | /bin/cut -c8 ` != "-" ]; then
				echo "Other Read permission set on directory $dir" >> $AUDITDIR/home_permission_$TIME.log

			fi

			if [ `echo $dirperm | /bin/cut -c9 ` != "-" ]; then
				echo "Other Write permission set on directory $dir" >> $AUDITDIR/home_permission_$TIME.log
			fi
			if [ `echo $dirperm | /bin/cut -c10 ` != "-" ]; then
				echo "Other Execute permission set on directory $dir" >> $AUDITDIR/home_permission_$TIME.log
			fi
	done

	echo "Checking User Dot File Permissions..."
	for dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|sync|halt|shutdown)' |
	/bin/awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do
		for file in $dir/.[A-Za-z0-9]*; do

			if [ ! -h "$file" -a -f "$file" ]; then
				fileperm=`/bin/ls -ld $file | /bin/cut -f1 -d" "`

				if [ `echo $fileperm | /bin/cut -c6 ` != "-" ]; then
					echo "Group Write permission set on file $file" >> $AUDITDIR/dotfile_permission_$TIME.log
				fi
				if [ `echo $fileperm | /bin/cut -c9 ` != "-" ]; then
					echo "Other Write permission set on file $file" >> $AUDITDIR/dotfile_permission_$TIME.log
				fi
			fi

		done

	done

	echo "Checking Permissions on User .netrc Files..."
	for dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|sync|halt|shutdown)' |\
		/bin/awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do
		for file in $dir/.netrc; do
			if [ ! -h "$file" -a -f "$file" ]; then
				fileperm=`/bin/ls -ld $file | /bin/cut -f1 -d" "`
				if [ `echo $fileperm | /bin/cut -c5 ` != "-" ]
				then
					echo "Group Read set on $file" >> $AUDITDIR/netrd_permission_$TIME.log
				fi
				if [ `echo $fileperm | /bin/cut -c6 ` != "-" ]
				then
					echo "Group Write set on $file" >> $AUDITDIR/netrd_permission_$TIME.log
				fi
				if [ `echo $fileperm | /bin/cut -c7 ` != "-" ]
				then
					echo "Group Execute set on $file" >> $AUDITDIR/netrd_permission_$TIME.log
				fi
				if [ `echo $fileperm | /bin/cut -c8 ` != "-" ]
				then
					echo "Other Read  set on $file" >> $AUDITDIR/netrd_permission_$TIME.log
				fi
				if [ `echo $fileperm | /bin/cut -c9 ` != "-" ]
				then
					echo "Other Write set on $file" >> $AUDITDIR/netrd_permission_$TIME.log
				fi
				if [ `echo $fileperm | /bin/cut -c10 ` != "-" ]
				then
					echo "Other Execute set on $file" >> $AUDITDIR/netrd_permission_$TIME.log
				fi
			fi
		done
	done

	echo "Checking for Presence of User .rhosts Files..."
	for dir in `/bin/cat /etc/passwd | /bin/egrep -v '(root|halt|sync|shutdown)' |\
		/bin/awk -F: '($7 != "/sbin/nologin") { print $6 }'`; do
		for file in $dir/.rhosts; do
			if [ ! -h "$file" -a -f "$file" ]; then
				echo ".rhosts file in $dir" >> $AUDITDIR/rhosts_$TIME.log
			fi    done
	done

	echo "Checking Groups in /etc/passwd..."

	for i in $(cut -s -d: -f4 /etc/passwd | sort -u ); do
	  grep -q -P "^.*?:x:$i:" /etc/group
	  if [ $? -ne 0 ]; then
		echo "Group $i is referenced by /etc/passwd but does not exist in /etc/group" >> $AUDITDIR/audit_$TIME.log
	  fi
	done

	echo "Checking That Users Are Assigned Home Directories..."

	cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do
	  if [ $uid -ge 500 -a ! -d "$dir" -a $user != "nfsnobody" ]; then
	 echo "The home directory ($dir) of user $user does not exist." >> $AUDITDIR/audit_$TIME.log
	 fi
	done

	echo "Checking That Defined Home Directories Exist..."

	cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do
	 if [ $uid -ge 500 -a -d "$dir" -a $user != "nfsnobody" ]; then
	 owner=$(stat -L -c "%U" "$dir")
	 if [ "$owner" != "$user" ]; then
	 echo "The home directory ($dir) of user $user is owned by $owner." >> $AUDITDIR/audit_$TIME.log
	 fi
	 fi
	done

	echo "Checking for Duplicate UIDs..."

	/bin/cat /etc/passwd | /bin/cut -f3 -d":" | /bin/sort -n | /usr/bin/uniq -c |\
		while read x ; do
		[ -z "${x}" ] && break
		set - $x
		if [ $1 -gt 1 ]; then
			users=`/bin/gawk -F: '($3 == n) { print $1 }' n=$2 \
				/etc/passwd | /usr/bin/xargs`
			echo "Duplicate UID ($2): ${users}" >> $AUDITDIR/audit_$TIME.log
		fi
	done

	echo "Checking for Duplicate GIDs..."

	/bin/cat /etc/group | /bin/cut -f3 -d":" | /bin/sort -n | /usr/bin/uniq -c |\
		while read x ; do
		[ -z "${x}" ] && break
		set - $x
		if [ $1 -gt 1 ]; then
			grps=`/bin/gawk -F: '($3 == n) { print $1 }' n=$2 \
				/etc/group | xargs`
			echo "Duplicate GID ($2): ${grps}" >> $AUDITDIR/audit_$TIME.log
		fi
	done

	echo "Checking That Reserved UIDs Are Assigned to System Accounts..."

	defUsers="root bin daemon adm lp sync shutdown halt mail news uucp operator games
	gopher ftp nobody nscd vcsa rpc mailnull smmsp pcap ntp dbus avahi sshd rpcuser
	nfsnobody haldaemon avahi-autoipd distcache apache oprofile webalizer dovecot squid
	named xfs gdm sabayon usbmuxd rtkit abrt saslauth pulse postfix tcpdump"
	/bin/cat /etc/passwd | /bin/awk -F: '($3 < 500) { print $1" "$3 }' |\
		while read user uid; do
			found=0
			for tUser in ${defUsers}
			do
				if [ ${user} = ${tUser} ]; then
					found=1
					fi
			done
			if [ $found -eq 0 ]; then
				echo "User $user has a reserved UID ($uid)."  >> $AUDITDIR/audit_$TIME.log
			fi
		done

	echo "Checking for Duplicate User Names..."

	cat /etc/passwd | cut -f1 -d":" | sort -n | /usr/bin/uniq -c |\
		while read x ; do
		[ -z "${x}" ] && break
		set - $x
		if [ $1 -gt 1 ]; then
			uids=`/bin/gawk -F: '($1 == n) { print $3 }' n=$2 \
				/etc/passwd | xargs`
			echo "Duplicate User Name ($2): ${uids}"  >> $AUDITDIR/audit_$TIME.log
		fi
	done

	echo "Checking for Duplicate Group Names..."

	cat /etc/group | cut -f1 -d":" | /bin/sort -n | /usr/bin/uniq -c |\
		while read x ; do
		[ -z "${x}" ] && break
		set - $x
		if [ $1 -gt 1 ]; then
			gids=`/bin/gawk -F: '($1 == n) { print $3 }' n=$2 \
				/etc/group | xargs`
			echo "Duplicate Group Name ($2): ${gids}"  >> $AUDITDIR/audit_$TIME.log
		fi
	done

	echo "Checking for Presence of User .netrc Files..."

	for dir in `/bin/cat /etc/passwd |\
		/bin/awk -F: '{ print $6 }'`; do
		if [ ! -h "$dir/.netrc" -a -f "$dir/.netrc" ]; then
			echo ".netrc file $dir/.netrc exists"  >> $AUDITDIR/audit_$TIME.log
		fi
	done

	echo "Checking for Presence of User .forward Files..."

	for dir in `/bin/cat /etc/passwd |\
		/bin/awk -F: '{ print $6 }'`; do
		if [ ! -h "$dir/.forward" -a -f "$dir/.forward" ]; then
			echo ".forward file $dir/.forward exists"  >> $AUDITDIR/audit_$TIME.log
		fi
	done

	echo "Modifying Network Parameters..."
	cp /etc/sysctl.conf $AUDITDIR/sysctl.conf_$TIME.bak

	cat > /etc/sysctl.conf << 'EOF'
	net.ipv4.ip_forward=0
	net.ipv4.conf.all.send_redirects=0
	net.ipv4.conf.default.send_redirects=0
	net.ipv4.conf.all.accept_source_route=0
	net.ipv4.conf.default.accept_source_route=0
	net.ipv4.conf.all.accept_redirects=0
	net.ipv4.conf.default.accept_redirects=0
	net.ipv4.conf.all.secure_redirects=0
	net.ipv4.conf.default.secure_redirects=0
	net.ipv4.conf.all.log_martians=1
	net.ipv4.conf.default.log_martians=1
	net.ipv4.route.flush=1
	net.ipv4.icmp_echo_ignore_broadcasts=1
	net.ipv4.icmp_ignore_bogus_error_responses=1
	net.ipv4.conf.all.rp_filter=1
	net.ipv4.conf.default.rp_filter=1
	net.ipv4.tcp_syncookies=1
	net.ipv6.conf.all.accept_ra=0
	net.ipv6.conf.default.accept_ra=0
	net.ipv6.conf.all.accept_redirects=0
	net.ipv6.conf.default.accept_redirects=0
	EOF

	echo "Disabling IPv6..."
	cp /etc/sysconfig/network $AUDITDIR/network_$TIME.bak
	echo "NETWORKING_IPV6=no" >> /etc/sysconfig/network
	echo "IPV6INIT=no" >> /etc/sysconfig/network
	echo "options ipv6 disable=1" >> /etc/modprobe.d/ipv6.conf
	echo "net.ipv6.conf.all.disable_ipv6=1" >> /etc/sysctl.d/ipv6.conf

	echo "Restricting Access to the su Command..."
	cp /etc/pam.d/su $AUDITDIR/su_$TIME.bak	
	pam_su='/etc/pam.d/su'
	line_num="$(grep -n "^\#auth[[:space:]]*required[[:space:]]*pam_wheel.so[[:space:]]*use_uid" ${pam_su} | cut -d: -f1)"
	sed -i "${line_num} a auth			required		pam_wheel.so 	use_uid" ${pam_su}

	echo ""
	echo "Successfully Completed"
	echo "Please check $AUDITDIR"



	#cat >> /etc/pam.d/password-auth << 'EOF'
	#password sufficient pam_unix.so remember=6
	#password requisite pam_pwquality.so try_first_pass retry=3
	#EOF

	#cat >> /etc/pam.d/system-auth << 'EOF'
	#password sufficient pam_unix.so remember=6
	#password requisite pam_pwquality.so try_first_pass retry=3
	#EOF

	sed -i -e  's/^PASS_MAX_DAYS.*99999/PASS_MAX_DAYS 60/' -e 's/^PASS_MIN_DAYS.*0/PASS_MIN_DAYS 7/' /etc/login.defs


	echo "Ensure permissions on bootloader config are configured "
    chown root:root /boot/grub2/grub.cfg
	chmod og-rwx /boot/grub2/grub.cfg

echo "Setting chrony configuration..."
cat >> /etc/chrony.conf << "EOF"
restrict -4 default kod nomodify notrap nopeer noquery 
restrict -6 default kod nomodify notrap nopeer noquery
EOF
cat >> /etc/chrony.conf << "EOF"
OPTIONS="-u chrony"
EOF





